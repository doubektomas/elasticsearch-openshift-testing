apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    kompose.cmd: kompose --provider openshift convert -f docker-compose.yml --emptyvols
    kompose.version: 1.1.0 (36652f6)
  labels:
    io.kompose.service: elasticsearch
  name: search-guard-configs
data:
####### USERS
  sg_internal_users.yml: |
    # This is the internal user database
    # The hash value is a bcrypt hash and can be generated with plugins/search-guard-6/tools/hash.sh
    # For example: $ plugins/search-guard-6/tools/hash.sh -p welcomehome

    #password is: admin
    admin:
      readonly: true
      hash: $2a$12$VcCDgh2NDk07JGN0rjGbM.Ad41qVR/YFJcgHp0UGns5JDymv..TOG
      roles:
        - admin

    #password is: logstash
    logstash:
      hash: $2a$12$u1ShR4l4uBS3Uv59Pa2y5.1uQuZBrZtmNfqB3iM/.jL0XoV9sghS2
      roles:
        - logstash

    #password is: kibanaserver
    kibanaserver:
      readonly: true
      hash: $2a$12$4AcgAt3xwOWadA5s5blL6ev39OXDNhmOesEoo33eZtrq2N0YrU3H.

    #password is: kibanaro
    kibanaro:
      hash: $2a$12$JJSXNfTowz7Uu5ttXfeYpeYE0arACvcwlPBStB1F.MI7f0U9Z4DGC
      roles:
        - kibanauser
        - readall

    #password is: readall
    readall:
      hash: $2a$12$ae4ycwzwvLtZxwZ82RmiEunBbIPiAmGZduBAjKN0TXdwQFtCwARz2
      #password is: readall
      roles:
        - readall

    #password is: snapshotrestore
    snapshotrestore:
      hash: $2y$12$DpwmetHKwgYnorbgdvORCenv4NAK8cPUg8AI6pxLCuWf/ALc0.v7W
      roles:
        - snapshotrestore

####### ROLES
  sg_roles.yml: |
    # Allows everything, but no changes to searchguard configuration index
    sg_all_access:
      readonly: true
      cluster:
        - UNLIMITED
      indices:
        '*':
          '*':
            - UNLIMITED
      tenants:
        admin_tenant: RW

    # Read all, but no write permissions
    sg_readall:
      readonly: true
      cluster:
        - CLUSTER_COMPOSITE_OPS_RO
      indices:
        '*':
          '*':
            - READ

    # Read all and monitor, but no write permissions
    sg_readall_and_monitor:
      cluster:
        - CLUSTER_MONITOR
        - CLUSTER_COMPOSITE_OPS_RO
      indices:
        '*':
          '*':
            - READ

    # For users which use kibana, access to indices must be granted separately
    sg_kibana_user:
      readonly: true
      cluster:
        - INDICES_MONITOR
        - CLUSTER_COMPOSITE_OPS
      indices:
        '?kibana':
          '*':
            - MANAGE
            - INDEX
            - READ
            - DELETE
        '?kibana-6':
          '*':
            - MANAGE
            - INDEX
            - READ
            - DELETE
        '*':
          '*':
            - indices:data/read/field_caps*

    # For the kibana server
    sg_kibana_server:
      readonly: true
      cluster:
          - CLUSTER_MONITOR
          - CLUSTER_COMPOSITE_OPS
          - cluster:admin/xpack/monitoring*
          - indices:admin/template*
      indices:
        '?kibana':
          '*':
            - INDICES_ALL
        '?kibana-6':
          '*':
            - INDICES_ALL
        '?reporting*':
          '*':
            - INDICES_ALL
        '?monitoring*':
          '*':
            - INDICES_ALL

    # For logstash and beats
    sg_logstash:
      cluster:
        - CLUSTER_MONITOR
        - CLUSTER_COMPOSITE_OPS
        - indices:admin/template/get
        - indices:admin/template/put
      indices:
        'logstash-*':
          '*':
            - CRUD
            - CREATE_INDEX
        '*beat*':
          '*':
            - CRUD
            - CREATE_INDEX

    # Allows adding and modifying repositories and creating and restoring snapshots
    sg_manage_snapshots:
      cluster:
        - MANAGE_SNAPSHOTS
      indices:
        '*':
          '*':
            - "indices:data/write/index"
            - "indices:admin/create"

    # Allows each user to access own named index
    sg_own_index:
      cluster:
        - CLUSTER_COMPOSITE_OPS
      indices:
        '${user_name}':
          '*':
            - INDICES_ALL

####### MAPPING
  sg_roles_mapping.yml: |
    # In this file users, backendroles and hosts can be mapped to Search Guard roles.
    # Permissions for Search Guard roles are configured in sg_roles.yml

    sg_all_access:
      readonly: true
      backendroles:
        - admin

    sg_logstash:
      backendroles:
        - logstash

    sg_kibana_server:
      readonly: true
      users:
        - kibanaserver

    sg_kibana_user:
      backendroles:
        - kibanauser

    sg_readall:
      readonly: true
      backendroles:
        - readall

    sg_manage_snapshots:
      readonly: true
      backendroles:
        - snapshotrestore

    sg_own_index:
      users:
        - '*'
