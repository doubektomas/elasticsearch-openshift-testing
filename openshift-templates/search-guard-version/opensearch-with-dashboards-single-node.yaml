apiVersion: v1
kind: Template
metadata:
  name: opensearch-with-dashboards-single-node
objects:
- kind: SecurityContextConstraints
  apiVersion: v1
  metadata:
    name: opensearch-scc
  allowPrivilegedContainer: true
  runAsUser:
    type: RunAsAny
  seLinuxContext:
    type: RunAsAny
  fsGroup:
    type: RunAsAny
  supplementalGroups:
    type: RunAsAny
  allowedCapabilities:
    - IPC_LOCK
    - SYS_RESOURCE
  users:
  - system:serviceaccount:${NAMESPACE}:default

- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      template.alpha.openshift.io/wait-for-ready: "true"
    labels:
      io.kompose.service: opensearch
    name: opensearch
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: opensearch
    serviceName: opensearch
    template:
      metadata:
        labels:
          io.kompose.service: opensearch
      spec:
        initContainers:
        - command:
          - sysctl
          - -w
          - vm.max_map_count=262144
          image: busybox:1.27.2
          imagePullPolicy: IfNotPresent
          name: init-sysctl
          resources: {}
          securityContext:
            privileged: true
        containers:
        - env:
          - name: cluster.name
            value: opensearch-cluster
          - name: node.name
            value: opensearch-node1
          - name: bootstrap.memory_lock
            value: "true"
          - name: OPENSEARCH_JAVA_OPTS
            value: -Xms512m -Xmx512m
          - name: DISABLE_INSTALL_DEMO_CONFIG
            value: "true"
          - name: DISABLE_SECURITY_PLUGIN
            value: "true"
          - name: discovery.type
            value: single-node
          image: opensearchproject/opensearch:2.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: opensearch
          ports:
          - containerPort: ${{OS_HTTP_PORT}}
            name: http
            protocol: TCP
          - containerPort: ${{OS_TRANSPORT_PORT}}
            name: transport
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 1
            periodSeconds: 3
            successThreshold: 1
            tcpSocket:
              port: transport
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 2Gi
            requests:
              cpu: 500m
              memory: 1Gi
          volumeMounts:
          - mountPath: /usr/share/opensearch/data
            name: storage
          securityContext:
            capabilities:
              add: ["SYS_CHROOT"]
        restartPolicy: Always
    volumeClaimTemplates:
    - metadata:
        name: storage
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: ${OPENSEARCH_VOLUME_CAPACITY}
        storageClassName: ${STORAGECLASSNAME}
    triggers:
    - type: ConfigChange

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      kompose.cmd: kompose --provider openshift convert -f docker-compose.yml --emptyvols
      kompose.version: 1.1.0 (36652f6)
    labels:
      io.kompose.service: opensearch-dashboards
    name: opensearch-dashboards
  spec:
    replicas: 1
    selector:
      io.kompose.service: opensearch-dashboards
    strategy:
      resources: {}
      type: Rolling
    template:
      metadata:
        labels:
          io.kompose.service: opensearch-dashboards
      spec:
        containers:
        - env:
          - name: OPENSEARCH_HOSTS
            value: "https://${OPENSEARCH_URL}"
          - name : DISABLE_SECURITY_DASHBOARDS_PLUGIN
            value: "true"
          image: opensearchproject/opensearch-dashboards:2.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: opensearch-dashboards
          ports:
          - containerPort: ${{DASHBOARDS_PORT}}
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 7
            periodSeconds: 3
            successThreshold: 1
            tcpSocket:
              port: http
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            capabilities:
              add: ["SYS_CHROOT"]
        restartPolicy: Always
    triggers:
    - type: ConfigChange

- apiVersion: v1
  kind: Route
  metadata:
    annotations:
    labels:
      io.kompose.service: opensearch
    name: opensearch
  spec:
    host: ${OPENSEARCH_URL}
    port:
      targetPort: "${OS_HTTP_PORT}"
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: opensearch
      weight: 100
    wildcardPolicy: None
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose --provider openshift convert -f docker-compose.yml --emptyvols
      kompose.version: 1.1.0 (36652f6)
    labels:
      io.kompose.service: opensearch
    name: opensearch
  spec:
    ports:
    - name: "${OS_HTTP_PORT}"
      port: ${{OS_HTTP_PORT}}
      protocol: TCP
      targetPort: ${{OS_HTTP_PORT}}
    - name: "${OS_TRANSPORT_PORT}"
      port: ${{OS_TRANSPORT_PORT}}
      protocol: TCP
      targetPort: ${{OS_TRANSPORT_PORT}}
    selector:
      io.kompose.service: opensearch
    type: ClusterIP

- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      kompose.cmd: kompose --provider openshift convert -f docker-compose.yml --emptyvols
      kompose.version: 1.1.0 (36652f6)
    labels:
      io.kompose.service: opensearch-dashboards
    name: opensearch-dashboards
  spec:
    host: ${DASHBOARDS_URL}
    port:
      targetPort: "${DASHBOARDS_PORT}"
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: opensearch-dashboards
      weight: 100
    wildcardPolicy: None

- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose --provider openshift convert -f docker-compose.yml --emptyvols
      kompose.version: 1.1.0 (36652f6)
    labels:
      io.kompose.service: opensearch-dashboards
    name: opensearch-dashboards
  spec:
    ports:
    - name: "${DASHBOARDS_PORT}"
      port: ${{DASHBOARDS_PORT}}
      protocol: TCP
      targetPort: ${{DASHBOARDS_PORT}}
    selector:
      io.kompose.service: opensearch-dashboards
    type: ClusterIP

parameters:
  - name: NAMESPACE
    displayName: Your project's namespace
    required: true 
  - name: CLUSTER_NAME
    displayName: Cluster name (cluster.name)
    value: docker-cluster
    required: true 
  - name: STORAGECLASSNAME
    displayName: Your storage class name (storageClassName) used in your cluster
    value: standard
    required: true
  - name: OPENSEARCH_VOLUME_CAPACITY
    displayName: Volume space available for data, e.g. 512Mi, 2Gi.
    value: 10Gi
    required: true
  - name: OPENSEARCH_URL
    displayName: OpenSearch url
    required: true 
  - name: OS_HTTP_PORT
    displayName: OpenSearch http port
    value: "9200"
    required: true
  - name: OS_TRANSPORT_PORT
    displayName: OpenSearch transport port
    value: "9600"
    required: true
  - name: DASHBOARDS_URL
    displayName: OpenSearch-Dashboards url
    required: true 
  - name: DASHBOARDS_PORT
    displayName: OpenSearch-Dashboards port
    value: "5601"
    required: true
